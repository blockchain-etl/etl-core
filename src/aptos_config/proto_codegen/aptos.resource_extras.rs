// This file is @generated by prost-build.
#[derive(serde::Serialize, serde::Deserialize)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StructTag {
    #[prost(string, required, tag = "1")]
    pub address: ::prost::alloc::string::String,
    #[prost(string, required, tag = "2")]
    pub module: ::prost::alloc::string::String,
    #[prost(string, required, tag = "3")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, repeated, tag = "4")]
    pub generic_type_params: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
/// Subsection of ChangeType, but only those relating to resources
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ResourceChangeType {
    DeleteResource = 1,
    WriteResource = 2,
}
impl ResourceChangeType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            ResourceChangeType::DeleteResource => "delete_resource",
            ResourceChangeType::WriteResource => "write_resource",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "delete_resource" => Some(Self::DeleteResource),
            "write_resource" => Some(Self::WriteResource),
            _ => None,
        }
    }
}
